// Branch decoder
module branch_decoder (
    /* flags generated by ALU */
    input  logic          negative,
    input  logic          zero,
    input  logic          carry,
    input  logic          overflow,
    input  logic  [2:0]   funct3,
    output logic          take_branch
);
    /* verilator lint_off UNOPTFLAT */
    logic beq;
    logic bne;
    logic blt;
    logic bge;
    logic bltu;
    logic bgeu;
    /* verilator lint_on UNOPTFLAT */
    
    assign beq = zero;
    assign bne = ~zero;
    assign blt = negative ^ overflow;
    assign bge = ~(negative ^ overflow);
    assign bltu = ~carry;
    assign bgeu = carry;

    always_comb begin
        case (funct3)
            3'b000: take_branch = beq;
            3'b001: take_branch = bne;
            3'b100: take_branch = blt;
            3'b101: take_branch = bge;
            3'b110: take_branch = bltu;
            3'b111: take_branch = bgeu;
            default: take_branch = 1'b0; // Error!!!
        endcase
    end

endmodule
